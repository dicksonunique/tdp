##Exercise 2.2
x<-1:2
cal<-x-mean(x)^2
cal
#exercise 2.6
x<-rnorm(20)
x
#Qestion i
x>1
#Qestion ii

x>=-1/2 & x<=1

#Qestion iii
abs(x)>1.5

#exercise 2.8
## Question a
A<-matrix(c(1:8), byrow=F, ncol=4)
A
## Question b
x=c(1)
y=c(-1)
xy=cbind(x,y)
xy
B<-matrix(xy,byrow =T,nrow = 15, ncol=10)
B

## Question c
g<-matrix(c(1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,1,1,1),nrow = 15,ncol=5)
g
t(g)


## Question d
outer(0:9,1:10,"+")

## Question e
d=matrix(c(1,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,1,3,4,5,6,7,8,9,1,2,4,5,6,7,8,9,1,2,3,5,6,7,8,9,1,2,3,4,6,7,
           8,9,1,2,3,4,5,7,8,9,1,2,3,4,5,6,8,9,1,2,3,4,5,6,7,9,1,2,3,4,5,6,7,8),nrow = 9)
t(d)


## Question (f)
matrix(c(1,0,1,-1),nrow = 2)

#Exercise 3.3
#question a
Title<-c("Rich also cry","Acrimomny","James Bon")
Director<-c("uwem","Onikeh","rstudio")
Year<-c(2009,2019,2000)
Country<-c("USA","Nigeria","UK")
Film<-cbind(Title,Director,Year,Country)
Film<-as.data.frame(Film)


#question b
Title<-c("Commando")
Director<-c("Buhari")
Year<-c(2020)
Country<-c("Liberia")
movie<-cbind(Title,Director,Year,Country)
movie<-as.data.frame(movie)
#question c
combine_films<-rbind(Film,movie)
combine_films
#question d
sort(combine_films$Title,decreasing = FALSE)

#Exercise 3.4
#queston a
repetiton<- rep(1:3,50)
repetiton
Str_repetiton<-rep(c("yes","No","Maybe"),50)
Str_repetiton

#queston b
str_rep<-rep(c("Yes","No"),each=50)
Str_rep=as.factor(str_rep)
Str_rep


#queston c
x<-rep(c("Yes","No","Maybe"),50)
x=as.factor(x)
x
droplevels(x,exclude="Maybe")



##Assignment 4
mult=function(A,B)({
  n1=row(A)
  n2=row(B)
  out=numeric(n1)
  for (i in n1){
    out[i]=sum(A[i,]*B)
    
  }
  out
}
A=matrix(rnorm(1e6),1e3,1e3))
A
B=rnorm(1e3)
mult(A,B)





#exercise 6.4

d<-matrix(rnorm(1:9,sd=1),ncol=3,nrow=3)
print(d)
apply(d,1,sum)

#Question 3

#load inbuilt data in R
data("iris")
head(iris)

#Create a data frame from the data using 5 columns with numeric values

sepal.l=c(5.1,4.9,4.7,4.6,5.0,5.4)
sepal.w=c(3.5,3.0,3.2,3.1,3.6,3.9)
petal.l=c(1.4,1.4,1.3,1.5,1.4,1.7)
petal.w=c(0.2,0.2,0.2,0.2,0.2,0.4)
Species.n=c(1,2,3,4,5,6)
data_c=data.frame(sepal.length=sepal.l,sepal.width=sepal.w,petal.length=petal.l,petal.width=petal.w,species.number=Species.n)
names(data_c)
colnames(data_c)
data_c
#(c) Use  the "apply" function in R to calculate the mean and standard deviation of the new data you created (Do both by row and column)
y=data_c
y
apply(y,1,mean) # mean by col
apply(y,2,mean)#mean by row
apply(y,1,sd)# standard deviation by col
apply(y,2,sd)# standard deviation by row
